version: '2.4'

services:

  idilic:
    image:   ${REPO}/${PROJECT}.idilic:${TAG}
    user:    ${D_UID}:${D_GID}
    restart: on-failure
    env_file:
      - ${MAIN_DLT}
      - ${MAIN_ENV}
      - ${TRGT_DLT}
      - ${TRGT_ENV}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/bin/docker:${DOCKER}
    build:
      context: ../../
      dockerfile: ${CORERELDIR}infra/docker/ids.___gen.dockerfile
      target:  idilic-${TARGET}
      network: bridge
      args:
        IDS_APT_PROXY_HOST: ${IDS_APT_PROXY_HOST:-}
        IDS_APT_PROXY_PORT: ${IDS_APT_PROXY_PORT:-}
        CORERELDIR: ${CORERELDIR}
        ROOTRELDIR: ${ROOTRELDIR}
        UID: ${D_UID}
        GID: ${D_GID}

  server:
    image:   ${REPO}/${PROJECT}.server:${TAG}
    restart: always
    env_file:
      - ${MAIN_DLT}
      - ${MAIN_ENV}
      - ${TRGT_DLT}
      - ${TRGT_ENV}
    build:
      context: ../../
      dockerfile: ${CORERELDIR}infra/docker/ids.___gen.dockerfile
      target:  server-${TARGET}
      network: bridge
      args:
        IDS_APT_PROXY_HOST: ${IDS_APT_PROXY_HOST:-}
        IDS_APT_PROXY_PORT: ${IDS_APT_PROXY_PORT:-}
        CORERELDIR: ${CORERELDIR}
        ROOTRELDIR: ${ROOTRELDIR}

  database:
    command:
      - mysqld
      - --character-set-server=utf8mb4
    image:   mysql:8.0.27
    restart: always
    volumes: ['schema:/var/lib/mysql']
    env_file:
      - ${MAIN_DLT}
      - ${MAIN_ENV}
      - ${TRGT_DLT}
      - ${TRGT_ENV}
    environment:
      MYSQL_ROOT_PASSWORD: ${IDS_DB_ROOT_PASSWORD}
      MYSQL_USER:     ${IDS_DATABASES_MAIN_USERNAME}
      MYSQL_PASSWORD: ${IDS_DATABASES_MAIN_PASSWORD}
      MYSQL_DATABASE: ${IDS_DATABASES_MAIN_DATABASE}
      MYSQL_TCP_PORT: ${IDS_DATABASES_MAIN_PORT:-3306}

volumes:
  schema:
    driver: local

networks:
  bridge: {}
