version: 2.1

commands:
  install-composer:
    steps:
      - run: | #!bash
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt-get update
          sudo apt-get install -y php8.0-cli php8.0-common php8.0-mbstring php8.0-intl php8.0-zip php8.0-bcmath php8.0-dom cloc
          curl -s https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer

  docker-permissions:
    steps:
      - run: | #!bash
          sudo chgrp docker /usr/bin/docker  /var/run/docker.sock
          sudo chmod    555 /usr/bin/docker  /var/run/docker.sock
          sudo usermod -aG docker $USER
          sudo find . -type d -exec chmod o-rwx  {} \;
          sudo find . -type f -exec chmod o-rwx  {} \;
          sudo find . -type d -exec chmod ug+rwx {} \;
          sudo find . -type f -exec chmod ug+rw  {} \;
          sudo find . -type f -exec chmod g+s    {} \;

workflows:
  version: 2

  build-and-push:
    jobs:
      - self-test
      - subproject-init-and-test
      - addon-test
      - recursive-test-1
      - recursive-test-2
      - recursive-test-3
      - build-and-push:
          requires:
            - self-test
            - subproject-init-and-test
            - recursive-test-1
            - recursive-test-2
            - recursive-test-3
      - build-and-push-addons:
          requires:
            - addon-test
            - build-and-push

  build-and-push_8-0:
    jobs:
      - self-test_8-0
      - subproject-init-and-test_8-0
      - addon-test_8-0
      - recursive-test-1_8-0
      - recursive-test-2_8-0
      - recursive-test-3_8-0
      - build-and-push_8-0:
          requires:
            - self-test_8-0
            - subproject-init-and-test_8-0
            - recursive-test-1_8-0
            - recursive-test-2_8-0
            - recursive-test-3_8-0
      - build-and-push-addons_8-0:
          requires:
            - addon-test_8-0
            - build-and-push_8-0

  build-and-push_8-1:
    jobs:
      - self-test_8-1
      - subproject-init-and-test_8-1
      - addon-test_8-1
      - recursive-test-1_8-1
      - recursive-test-2_8-1
      - recursive-test-3_8-1
      - build-and-push_8-1:
          requires:
            - self-test_8-1
            - subproject-init-and-test_8-1
            - recursive-test-1_8-1
            - recursive-test-2_8-1
            - recursive-test-3_8-1
      - build-and-push-addons_8-1:
          requires:
            - addon-test_8-1
            - build-and-push_8-1

  build-and-push_8-2:
    jobs:
      - self-test_8-2
      - subproject-init-and-test_8-2
      - addon-test_8-2
      - recursive-test-1_8-2
      - recursive-test-2_8-2
      - recursive-test-3_8-2
      - build-and-push_8-2:
          requires:
            - self-test_8-2
            - subproject-init-and-test_8-2
            - recursive-test-1_8-2
            - recursive-test-2_8-2
            - recursive-test-3_8-2
      - build-and-push-addons_8-2:
          requires:
            - addon-test_8-2
            - build-and-push_8-2

jobs:
  subproject-init-and-test:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: curl https://seanmorris-badger.herokuapp.com/ids/
      - run: composer create-project seanmorris/ids-project -s dev --remove-vcs
      - run: cd ids-project && composer require seanmorris/ids:dev-${CIRCLE_BRANCH}
      - run: cd ids-project && make @test current-tag build start-bg test

  subproject-init-and-test_8-0:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: curl -X PURGE https://camo.githubusercontent.com/df5e6413e42c1af3738c1c32d36f59a2957c8.17/68747470733a2f2f7365616e6d6f7272698.1d62616467658.1e6865726f6b7561708.1e636f6d2f69648.1f6275696c642d616e642d707573685f372d313f6c6162656c3d70688.153230372e31
      - run: composer create-project seanmorris/ids-project -s dev --remove-vcs
      - run: cd ids-project && composer require seanmorris/ids:dev-${CIRCLE_BRANCH}
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.0
      - run: cd ids-project && PHP=8.0 make @test current-tag build start-bg test

  subproject-init-and-test_8-1:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: curl -X PURGE https://camo.githubusercontent.com/f88fddd96c2b6c651d77e8bb8546e793ac725833/68747470733a2f2f7365616e6d6f7272698.1d62616467658.1e6865726f6b7561708.1e636f6d2f69648.1f6275696c642d616e642d707573685f372d323f6c6162656c3d70688.153230372e32
      - run: composer create-project seanmorris/ids-project -s dev --remove-vcs
      - run: cd ids-project && composer require seanmorris/ids:dev-${CIRCLE_BRANCH}
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.1
      - run: cd ids-project && PHP=8.1 make @test current-tag build start-bg test

  subproject-init-and-test_8-2:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: curl -X PURGE https://camo.githubusercontent.com/f88fddd96c2b6c651d77e8bb8546e793ac725833/68747470733a2f2f7365616e6d6f7272698.1d62616467658.1e6865726f6b7561708.1e636f6d2f69648.1f6275696c642d616e642d707573685f372d323f6c6162656c3d70688.153230372e32
      - run: composer create-project seanmorris/ids-project -s dev --remove-vcs
      - run: cd ids-project && composer require seanmorris/ids:dev-${CIRCLE_BRANCH}
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.2
      - run: cd ids-project && PHP=8.2 make @test current-tag build start-bg test

  self-test:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: make @base ct b
      - run: make @dev ct b
      - run: make @prod ct b
      - run: make @test ct b
      - run: make @base ct b
      - run: make @test ct b t lt li
      - run: make stay@dev ct b lt li
      - run: make @prod ct b
      - run: make ct b
      - run: make @test ct b t
      - run: make stay@base ct b
      - run: make ct b
      - run: make post-coverage

  self-test_8-0:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.0
      - run: PHP=8.0 make @base ct b
      - run: PHP=8.0 make @dev ct b
      - run: PHP=8.0 make @prod ct b
      - run: PHP=8.0 make @test ct b
      - run: PHP=8.0 make @base ct b
      - run: PHP=8.0 make @test ct b t lt li
      - run: PHP=8.0 make stay@dev ct b lt li
      - run: PHP=8.0 make @prod ct b
      - run: PHP=8.0 make ct b
      - run: PHP=8.0 make @test ct b t
      - run: PHP=8.0 make stay@base ct b
      - run: PHP=8.0 make ct b

  self-test_8-1:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.1
      - run: PHP=8.1 make @base ct b
      - run: PHP=8.1 make @dev ct b
      - run: PHP=8.1 make @prod ct b
      - run: PHP=8.1 make @test ct b
      - run: PHP=8.1 make @base ct b
      - run: PHP=8.1 make @test ct b t lt li
      - run: PHP=8.1 make stay@dev ct b lt li
      - run: PHP=8.1 make @prod ct b
      - run: PHP=8.1 make ct b
      - run: PHP=8.1 make @test ct b t
      - run: PHP=8.1 make stay@base ct b
      - run: PHP=8.1 make ct b

  self-test_8-2:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.2
      - run: PHP=8.2 make @base ct b
      - run: PHP=8.2 make @dev ct b
      - run: PHP=8.2 make @prod ct b
      - run: PHP=8.2 make @test ct b
      - run: PHP=8.2 make @base ct b
      - run: PHP=8.2 make @test ct b t lt li
      - run: PHP=8.2 make stay@dev ct b lt li
      - run: PHP=8.2 make @prod ct b
      - run: PHP=8.2 make ct b
      - run: PHP=8.2 make @test ct b t
      - run: PHP=8.2 make stay@base ct b
      - run: PHP=8.2 make ct b

  recursive-test-1:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: sudo make @test+make ct b sb run CMD="make @test test"

  recursive-test-1_8-0:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.0
      - run: sudo PHP=8.0 make @test+make ct b sb run CMD="make @test test"

  recursive-test-1_8-1:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.1
      - run: sudo PHP=8.1 make @test+make ct b sb run CMD="make @test test"

  recursive-test-1_8-2:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.2
      - run: sudo PHP=8.2 make @test+make ct b sb run CMD="make @test test"

  recursive-test-2:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: sudo make @test+inotify+make b sb run CMD="make @test+make run CMD=\"make test\""

  recursive-test-2_8-0:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.0
      - run: sudo PHP=8.0 make @test+make b sb run CMD="make @test+make run CMD=\"make test\""

  recursive-test-2_8-1:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.1
      - run: sudo PHP=8.1 make @test+make b sb run CMD="make @test+make run CMD=\"make test\""

  recursive-test-2_8-2:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.2
      - run: sudo PHP=8.2 make @test+make b sb run CMD="make @test+make run CMD=\"make test\""

  recursive-test-3:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: sudo make @test+make b sb run CMD="make @test+make run CMD=\"make @test+make run CMD=\\\"make test\\\"\""

  recursive-test-3_8-0:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.0
      - run: sudo PHP=8.0 make @test+make b sb run CMD="make @test+make run CMD=\"make @test+make run CMD=\\\"make test\\\"\""

  recursive-test-3_8-1:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.1
      - run: sudo PHP=8.1 make @test+make b sb run CMD="make @test+make run CMD=\"make @test+make run CMD=\\\"make test\\\"\""

  recursive-test-3_8-2:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - docker-permissions
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.2
      - run: sudo PHP=8.2 make @test+make b sb run CMD="make @test+make run CMD=\"make @test+make run CMD=\\\"make test\\\"\""

  addon-test:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: make @base+aptcache ct b
      - run: make @dev+aptcache+graylog+inotify ct b
      - run: make @test+aptcache ct b
      - run: make @test+aptcache+graylog+inotify ct sb t

  addon-test_8-0:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: PHP=8.0 composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.0
      - run: PHP=8.0 make @base+aptcache ct b
      - run: PHP=8.0 make @dev+aptcache+graylog+inotify ct b
      - run: PHP=8.0 make @test+aptcache ct b
      - run: PHP=8.0 make @test+aptcache+graylog+inotify ct sb t

  addon-test_8-1:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: PHP=8.1 composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.1
      - run: PHP=8.1 make @base+aptcache ct b
      - run: PHP=8.1 make @dev+aptcache+graylog+inotify ct b
      - run: PHP=8.1 make @test+aptcache ct b
      - run: PHP=8.1 make @test+aptcache+graylog+inotify ct sb t

  addon-test_8-2:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: PHP=8.2 composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.2
      - run: PHP=8.2 make @base+aptcache ct b
      - run: PHP=8.2 make @dev+aptcache+graylog+inotify ct b
      - run: PHP=8.2 make @test+aptcache ct b
      - run: PHP=8.2 make @test+aptcache+graylog+inotify ct sb t

  build-and-push:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run: make @base ct b psi
      - run: make @dev  ct b psi
      - run: make @prod ct b psi
      - run: make @test ct b psi

  build-and-push_8-0:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.0
      - run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run: PHP=8.0 make @base ct b psi
      - run: PHP=8.0 make @dev  ct b psi
      - run: PHP=8.0 make @prod ct b psi
      - run: PHP=8.0 make @test ct b psi

  build-and-push_8-1:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.1
      - run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run: PHP=8.1 make @base ct b psi
      - run: PHP=8.1 make @dev  ct b psi
      - run: PHP=8.1 make @prod ct b psi
      - run: PHP=8.1 make @test ct b psi

  build-and-push_8-2:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.2
      - run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run: PHP=8.2 make @base ct b psi
      - run: PHP=8.2 make @dev  ct b psi
      - run: PHP=8.2 make @prod ct b psi
      - run: PHP=8.2 make @test ct b psi

  build-and-push-addons:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: composer install
      - run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run: make @base+aptcache ct b psi
      - run: make @dev+aptcache+graylog+inotify  ct b psi
      - run: make @prod+aptcache ct b psi
      - run: make @test+aptcache ct b psi

  build-and-push-addons_8-0:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.0
      - run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run: PHP=8.0 composer install
      - run: PHP=8.0 make @base+aptcache ct b psi
      - run: PHP=8.0 make @dev+aptcache+graylog+inotify ct b psi
      - run: PHP=8.0 make @test+aptcache ct b psi
      - run: PHP=8.0 make @prod+aptcache ct b psi
      - run: curl -X PURGE https://camo.githubusercontent.com/df5e6413e42c1af3738c1c32d36f59a2957c8.17/68747470733a2f2f7365616e6d6f7272698.1d62616467658.1e6865726f6b7561708.1e636f6d2f69648.1f6275696c642d616e642d707573685f372d313f6c6162656c3d70688.153230372e31

  build-and-push-addons_8-1:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.1
      - run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run: PHP=8.1 composer install
      - run: PHP=8.1 make @base+aptcache ct b psi
      - run: PHP=8.1 make @dev+aptcache+graylog+inotify ct b psi
      - run: PHP=8.1 make @test+aptcache ct b psi
      - run: PHP=8.1 make @prod+aptcache ct b psi
      - run: curl -X PURGE https://camo.githubusercontent.com/f88fddd96c2b6c651d77e8bb8546e793ac725833/68747470733a2f2f7365616e6d6f7272698.1d62616467658.1e6865726f6b7561708.1e636f6d2f69648.1f6275696c642d616e642d707573685f372d323f6c6162656c3d70688.153230372e32

  build-and-push-addons_8-2:
    parallelism: 1
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: false
    resource_class: large
    steps:
      - checkout
      - install-composer
      - run: make -B @test infra/docker/ids.___gen.dockerfile PHP=8.2
      - run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
      - run: PHP=8.2 composer install
      - run: PHP=8.2 make @base+aptcache ct b psi
      - run: PHP=8.2 make @dev+aptcache+graylog+inotify ct b psi
      - run: PHP=8.2 make @test+aptcache ct b psi
      - run: PHP=8.2 make @prod+aptcache ct b psi
      - run: curl -X PURGE https://camo.githubusercontent.com/f88fddd96c2b6c651d77e8bb8546e793ac725833/68747470733a2f2f7365616e6d6f7272698.1d62616467658.1e6865726f6b7561708.1e636f6d2f69648.1f6275696c642d616e642d707573685f372d323f6c6162656c3d70688.153230372e32
